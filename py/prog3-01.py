# -*- coding: utf-8 -*-
"""prog3-01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XP3CNlUTD6-uyWQCO1rZubbarpxwNmZf
"""

from google.colab import files
files.upload() # kaggle.jsonをアップロード
!mkdir -p ~/.kaggle
!mv kaggle.json ~/.kaggle/
!chmod 600 /root/.kaggle/kaggle.json

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
# 標準化および正規化用のクラスをインポート
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import MinMaxScaler
# グラフ描画用ライブラリをインポート
import matplotlib
# %matplotlib inline
import matplotlib.pyplot as plt

# データの準備（Kaggle API を用いたデータのダウンロード）
!kaggle datasets download -d \
sgonkaggle/youtube-trend-with-subscriber
!unzip youtube-trend-with-subscriber.zip

# CSVファイルを読み込んでデータフレームに格納
df = pd.read_csv('USvideos_modified.csv')
# データフレームから特定の列のみを抽出
# 視聴回数、コメント数など
data = df.loc[:,['views', 'likes', 
                 'dislikes', 'comment_count']]
# likesとviewsを標準化
print('標準化(StandardScaler)')
sc = StandardScaler()
data_std = sc.fit_transform(data.loc[:,['likes', 'views']])
print(data_std)
# 標準化したデータでlikesとviewsの関係を可視化
plt.figure()
plt.title('StandardScaler (Likes, Views)')
# 横軸の範囲を-5.0から5.0に設定
plt.xlim((-5.0, 5.0))
# 縦軸の範囲を-5.0から5.0に設定
plt.ylim((-5.0, 5.0))

# 標準化したlikesとviewsを縦軸、横軸として散布図を描画
plt.scatter(data_std[:,0], data_std[:,1], 
color='k', marker='^')
plt.xlabel('Likes')
plt.ylabel('Views')
plt.grid()
plt.savefig('3.1_standard_scaler.png', dpi=500)

# 正規化（デフォルトでは、最小値0、最大値1に正規化）
print('正規化(MinMaxScaler)') 
ms = MinMaxScaler()
data_norm = ms.fit_transform(data.loc[:, ['dislikes',
 'comment_count']])
print(data_norm)
# 正規化したデータでdislikesとcomment_countの関係を可視化
plt.figure()
plt.title('MinMaxScaler (Disikes, Comment Count)')
plt.scatter(data_norm[:,0], data_norm[:,1], 
color='k', marker='^')
plt.xlabel('Dislikes')
plt.ylabel('Comment_Count')
plt.grid()
plt.savefig('3.1_minmax_scaler.png', dpi=500)