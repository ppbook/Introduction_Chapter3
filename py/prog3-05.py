# -*- coding: utf-8 -*-
"""prog3-05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wSZd-G-BN-amf1I4xcFFYz0R2zaIpJWj
"""

from google.colab import files
files.upload() # kaggle.jsonをアップロード
!mkdir -p ~/.kaggle
!mv kaggle.json ~/.kaggle/
!chmod 600 /root/.kaggle/kaggle.json

import pandas as pd
import numpy as np
# 四分位範囲を求めるためのクラスをインポート
from scipy import stats
# データの準備
def prepare():
    !kaggle datasets download -d rajyellow46/wine-quality
    !unzip wine-quality.zip
# データの前処理（データフレームに読み込む）
def preprocess():
    df = pd.read_csv('winequalityN.csv')
    # 分析対象とする列
    fields = ['fixed acidity', 
              'volatile acidity', 
              'citric acid', 
              'residual sugar', 
              'chlorides', 
              'free sulfur dioxide', 
              'total sulfur dioxide', 
              'density', 
              'pH', 
              'sulphates', 
              'alcohol','quality']

    # 読み込んだデータの行数
    print('Num. of data: %d' % len(df))
    data = df.loc[:,fields]
    df = pd.DataFrame(data, columns=fields)
    return data, df, fields

# 外れ値検出（範囲指定）
def detect_outlier_range(df, fields):
    # 絶対値が7.0より大きい値を含む行を検出
    k = 7.0
    outlier = df[(np.abs(df)>k).any(1)]
    print('Outliers (%d):' % len(outlier))
    odf = pd.DataFrame(outlier, columns=fields)
    print(odf[:5]) 

# 四分位範囲(IQR)による外れ値除去
def detect_outlier_IQR(o_df, fields, target_col): 
    df = o_df.loc[:, [target_col]]
    # 第1四分位数（=25パーセンタイル）
    q1 = stats.scoreatpercentile(df, 25)
    # 第3四分位数（=75パーセンタイル）
    q3 = stats.scoreatpercentile(df, 75)
    # IQRの計算
    iqr = q3 - q1 
    # 外れ値の範囲を計算する
    # 第1四分位数(q1)からiqr*1.5を引く
    iqr_min = q1 - iqr * 1.5  
    # 第3四分位数(q3)にiqr*1.5を足す
    iqr_max = q3 + iqr * 1.5 
    print('Range(Min:{:.3f}, Max:{:.3f})'.format(
iqr_min, iqr_max))

    # 範囲から外れている値を除外したデータフレームを作成
    iqr_fsd_df = o_df[
(df[target_col]<iqr_max) \
 & (df[target_col]>iqr_min)]
    iqr_outliers = o_df[
  (df[target_col]>=iqr_max) \
  | (df[target_col]<=iqr_min)]
    print('Remove outliers by \
          IQR({})'.format(len(iqr_fsd_df)))
    print(iqr_fsd_df[20:31])
    print('Records including Outliers({}):'.format(
                                 len(iqr_outliers)))
    print(iqr_outliers.head())
    return iqr_fsd_df

def main():
    prepare()
    data, df, fields = preprocess()
    detect_outlier_range(df, fields)
    # 2つの列に着目し、順番に外れ値除去を行う
    iqr_fsd_df = detect_outlier_IQR(df, fields, 
                              'total sulfur dioxide')
    detect_outlier_IQR(iqr_fsd_df, fields, 'alcohol')

if __name__ == '__main__':
    main()